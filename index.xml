<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ฅ=^•ﻌ•^=~</title>
        <link>https://catmode.github.io/</link>
        <description>Recent content on ฅ=^•ﻌ•^=~</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 27 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://catmode.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>HUGO媒体插入实例</title>
        <link>https://catmode.github.io/p/hugo-genshin/</link>
        <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/hugo-genshin/</guid>
        <description>&lt;img src="https://catmode.github.io/p/hugo-genshin/W.png" alt="Featured image of post HUGO媒体插入实例" /&gt;&lt;h2 id=&#34;inazuma&#34;&gt;Inazuma&lt;/h2&gt;

    &lt;iframe
        frameborder=&#34;no&#34;
        border=&#34;0&#34;
        marginwidth=&#34;0&#34;
        marginheight=&#34;0&#34;
        width=60%
        height=86
        src=&#34;//music.163.com/outchain/player?type=2&amp;id=1879098378&amp;auto=1&amp;height=66&#34;&gt;
    &lt;/iframe&gt;

&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 177; 
			flex-basis: 426px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/hugo-genshin/I.png&#34; data-size=&#34;1920x1080&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/hugo-genshin/I.png&#34;
			width=&#34;1920&#34;
			height=&#34;1080&#34;
			srcset=&#34;https://catmode.github.io/p/hugo-genshin/I_huf45f38d20310c322abf0fe823ef05219_1929367_480x0_resize_box_3.png 480w, https://catmode.github.io/p/hugo-genshin/I_huf45f38d20310c322abf0fe823ef05219_1929367_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;Photo by 106996617&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Photo by 106996617&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;watatsumi&#34;&gt;Watatsumi&lt;/h2&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;//player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV11L4y187&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;hr&gt;
</description>
        </item>
        <item>
        <title>钢琴曲谱</title>
        <link>https://catmode.github.io/p/piano/</link>
        <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/piano/</guid>
        <description>&lt;h2 id=&#34;梦幻曲舒曼&#34;&gt;《梦幻曲》舒曼&lt;/h2&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/Traumerei-1.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/Traumerei-1.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/Traumerei-1_hu56337aeca56272ee83fd0dfef72e4183_147921_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/Traumerei-1_hu56337aeca56272ee83fd0dfef72e4183_147921_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/Traumerei-2.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/Traumerei-2.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/Traumerei-2_hua28e2a69dfd51781921247ed8b301fe5_156597_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/Traumerei-2_hua28e2a69dfd51781921247ed8b301fe5_156597_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;//player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1Uz4y1o7Zj&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;月光德彪西&#34;&gt;《月光》德彪西&lt;/h2&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-1.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-1.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-1_hu6d8fe30e3b5b7810d5e9b58a5cea093c_223129_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-1_hu6d8fe30e3b5b7810d5e9b58a5cea093c_223129_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-2.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-2.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-2_hu9c38c68fc9dcbbd1a2ddd92dbf054607_228429_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-2_hu9c38c68fc9dcbbd1a2ddd92dbf054607_228429_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-3.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-3.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-3_hu6a48f9877eadf850e8b2926f6c8a00c8_234585_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-3_hu6a48f9877eadf850e8b2926f6c8a00c8_234585_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-4.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-4.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-4_hu86073da20b0c3efae0f1794ccfad6b22_217843_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-4_hu86073da20b0c3efae0f1794ccfad6b22_217843_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-5.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-5.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-5_hu35b893a3c93949ce72ca64173c79a826_179152_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-5_hu35b893a3c93949ce72ca64173c79a826_179152_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 69; 
			flex-basis: 167px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/piano/CdL-6.png&#34; data-size=&#34;720x1030&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/piano/CdL-6.png&#34;
			width=&#34;720&#34;
			height=&#34;1030&#34;
			srcset=&#34;https://catmode.github.io/p/piano/CdL-6_hu6902728a41430cba413f305c301f8c3a_153167_480x0_resize_box_3.png 480w, https://catmode.github.io/p/piano/CdL-6_hu6902728a41430cba413f305c301f8c3a_153167_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;//player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1dV411r7qG&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Oculus开发账号</title>
        <link>https://catmode.github.io/p/oculus/</link>
        <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/oculus/</guid>
        <description>&lt;h1 id=&#34;注册fb&#34;&gt;注册FB&lt;/h1&gt;
&lt;p&gt;下载Oculus APP&lt;/p&gt;
&lt;p&gt;开发者模式&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.oculus.com/downloads/native-android/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://developer.oculus.com/downloads/native-android/&lt;/a&gt;
下载Oculus Developer Hub&lt;/p&gt;
&lt;p&gt;Oculus开启开发者模式2021 10月版教程&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;相信很多小伙伴们发现自己的Oculus APP上突然就没有了开发者权限这个选项，这是因为Oculus新政策导致的。因此在这里提供新的开启开发者模式的方法，此方法需要一根USB c口的数据线以及kx，这里就不提供kx的方法了。

步骤如下：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入以下网址https://developer.oculus.com/downloads/native-android/ 从中下载Oculus Developer Hub以下简称（ODH）对应操作系统的版本并安装。&lt;/p&gt;
&lt;p&gt;启动Oculus quest2，并用数据线连接至电脑，选择允许电脑读取。&lt;/p&gt;
&lt;p&gt;启动ODH，使用已经创建好的开发者账户登录（只需在借记卡和手机号里面选择一个验证过就可以了，验证的地址如下：https://developer.oculus.com/manage/verify/ 注册的教程网上太多了，此处不再赘述）&lt;/p&gt;
&lt;p&gt;进入软件后选择Device Manager -&amp;gt; Set Up New Device&lt;/p&gt;
&lt;p&gt;一直下一步，连接上能kx的WiFi，然后勾选Enable Developer Mode&lt;/p&gt;
&lt;p&gt;带上VR头盔，在里面选择允许此电脑使用USB调试之类的一个选项&lt;/p&gt;
&lt;p&gt;经过以上步骤，这台VR设备的开发者模式就开启完成了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HUGO食用指南 - 留言篇</title>
        <link>https://catmode.github.io/p/hugo-comments/</link>
        <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/hugo-comments/</guid>
        <description>&lt;img src="https://catmode.github.io/p/hugo-comments/twikoo.png" alt="Featured image of post HUGO食用指南 - 留言篇" /&gt;&lt;h1 id=&#34;twikoo&#34;&gt;Twikoo&lt;/h1&gt;
&lt;p&gt;评论模块选择了&lt;strong&gt;Twikkoo&lt;/strong&gt;，这里使用了&lt;strong&gt;Vercel 部署&lt;/strong&gt;方式。详细参考&lt;a class=&#34;link&#34; href=&#34;https://twikoo.js.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twikoo官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vercel-部署教程&#34;&gt;Vercel 部署教程&lt;/h2&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;//player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1Fh411e7ZH&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;创建mongodb数据库&#34;&gt;创建MongoDB数据库&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mongodb.com/zh-cn/cloud/atlas/register&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;申请 MongoDB 账号&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建免费 MongoDB 数据库，区域推荐选择 &lt;code&gt;AWS / N. Virginia (us-east-1)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;Clusters&lt;/strong&gt; 页面点击 &lt;code&gt;CONNECT&lt;/code&gt;，按步骤&lt;strong&gt;设置允许所有 IP 地址的连接&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建数据库用户，并记录数据库连接字符串，请将连接字符串中的 &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt; 修改为数据库密码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;mongodb+srv://user:&lt;!-- raw HTML omitted --&gt;@cluster0.b5hay.mongodb.net/myFirstDatabase?retryWrites=true&amp;amp;w=majority&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;部署至vercel&#34;&gt;部署至Vercel&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://vercel.com/signup&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;申请 Vercel 账号&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;a class=&#34;link&#34; href=&#34;https://vercel.com/import/project?template=https://github.com/imaegoo/twikoo/tree/dev/src/vercel-min&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;将 Twikoo 一键部署到 Vercel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;code&gt;Settings&lt;/code&gt; - &lt;code&gt;Environment Variables&lt;/code&gt;，添加环境变量 &lt;code&gt;MONGODB_URI&lt;/code&gt;，值为上方第 4 步的数据库连接字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;code&gt;Overview&lt;/code&gt;，点击 Domains 下方的链接，如果环境配置正确，可以看到 “Twikoo 云函数运行正常” 的提示&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Vercel Domains（包含 https:// 前缀，例如https://xxx.vercel.app）即为环境 id&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前端部署&#34;&gt;前端部署&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果网站主题支持 Twikoo，只需在配置文件中指定 Twikoo 即可&lt;/li&gt;
&lt;li&gt;如果网站主题不支持 Twikoo，需要修改源码手动引入 Twikoo 的 js 文件并初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在站点配置文件中修改部分如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;comments:
    enabled: true
    provider: twikoo
...
twikoo:
    envId: &amp;lt;添加Vercel Domains环境ID&amp;gt;
    region:
    path:
    lang:
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;版本更新&#34;&gt;版本更新&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;a class=&#34;link&#34; href=&#34;https://vercel.com/dashboard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vercel 仪表板&lt;/a&gt; - &lt;code&gt;twikoo&lt;/code&gt; - &lt;code&gt;Settings&lt;/code&gt; - &lt;code&gt;Git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 &lt;strong&gt;Connected Git Repository&lt;/strong&gt; 下方的仓库地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开 &lt;code&gt;package.json&lt;/code&gt;，点击编辑&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 &lt;code&gt;&amp;quot;twikoo-vercel&amp;quot;: &amp;quot;x.x.x&amp;quot;&lt;/code&gt; 其中的版本号修改为最新版本号。点击 &lt;code&gt;Commit changes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署会自动触发，可以回到 &lt;a class=&#34;link&#34; href=&#34;https://vercel.com/dashboard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vercel 仪表板&lt;/a&gt; ，查看部署状态&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;设置头像&#34;&gt;设置头像&lt;/h2&gt;
&lt;p&gt;Twikoo默认自定义头像CDN为：&lt;strong&gt;Gravatar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.gravatar.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;申请 Gravatar 账号&lt;/a&gt;，上传头像应用即可，之后用注册的邮箱评论就自带头像啦&lt;/p&gt;
&lt;h1 id=&#34;一起愉快的灌水吧&#34;&gt;一起愉快的灌水吧！&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;HUGO食用指南&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基础搭建及部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-music/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加音乐模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-comments/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加评论模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Clash - TUN</title>
        <link>https://catmode.github.io/p/clash-tun/</link>
        <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/clash-tun/</guid>
        <description>&lt;h1 id=&#34;clash-tun&#34;&gt;Clash-TUN&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Clash 在安装 wintun 插件后即可全局接管所有软件的流量，包括游戏。开启后请注意流量消耗情况，避免使用代理更新游戏导致流量耗尽。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下载-wintun-插件&#34;&gt;下载 wintun 插件&lt;/h2&gt;
&lt;p&gt;打开 &lt;a class=&#34;link&#34; href=&#34;https://www.wintun.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.wintun.net/&lt;/a&gt; 下载最新 wintun插件并解压。&lt;/p&gt;
&lt;h2 id=&#34;复制-wintun-插件&#34;&gt;复制 wintun 插件&lt;/h2&gt;
&lt;p&gt;在 Clash 主页点击 &lt;strong&gt;Home Directory&lt;/strong&gt; 右侧的 &lt;strong&gt;Open Folder&lt;/strong&gt; 打开 Clash 的主目录。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 140; 
			flex-basis: 338px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/clash-tun/1.png&#34; data-size=&#34;1001x710&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/clash-tun/1.png&#34;
			width=&#34;1001&#34;
			height=&#34;710&#34;
			srcset=&#34;https://catmode.github.io/p/clash-tun/1_hub8aac77aacf4aab3a7168aaa79f52be0_21236_480x0_resize_box_3.png 480w, https://catmode.github.io/p/clash-tun/1_hub8aac77aacf4aab3a7168aaa79f52be0_21236_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将上一步解压文件中的 &lt;code&gt;/wintun/bin/amd64/wintun.dll&lt;/code&gt; 复制到这个目录。&lt;strong&gt;（不要选错到arm64）&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;激活-wintun-插件&#34;&gt;激活 wintun 插件&lt;/h2&gt;
&lt;p&gt;点击 Clash 首页 &lt;strong&gt;Service Mode&lt;/strong&gt; 右侧的 &lt;strong&gt;Manage&lt;/strong&gt;，再点击 &lt;strong&gt;Install&lt;/strong&gt;。此时系统可能会弹出 UAC 提示，允许后 Clash 会自动重启。&lt;/p&gt;
&lt;p&gt;如重启后 Service Mode 右侧地球变为绿色，表示激活成功。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 140; 
			flex-basis: 336px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/clash-tun/2.png&#34; data-size=&#34;1003x716&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/clash-tun/2.png&#34;
			width=&#34;1003&#34;
			height=&#34;716&#34;
			srcset=&#34;https://catmode.github.io/p/clash-tun/2_huc8df4519e32d4fd420e724e96d726a59_21398_480x0_resize_box_3.png 480w, https://catmode.github.io/p/clash-tun/2_huc8df4519e32d4fd420e724e96d726a59_21398_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;开启-mixin&#34;&gt;开启 Mixin&lt;/h2&gt;
&lt;p&gt;点击 Clash 左侧 &lt;strong&gt;Settings&lt;/strong&gt;，点击 &lt;strong&gt;Profile Mixin&lt;/strong&gt; 下方 &lt;strong&gt;YAML&lt;/strong&gt; 右侧 &lt;strong&gt;Edit&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 140; 
			flex-basis: 336px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/clash-tun/3.png&#34; data-size=&#34;1003x716&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/clash-tun/3.png&#34;
			width=&#34;1003&#34;
			height=&#34;716&#34;
			srcset=&#34;https://catmode.github.io/p/clash-tun/3_huc4b67683e030306a45c6cb613da1f9f2_18412_480x0_resize_box_3.png 480w, https://catmode.github.io/p/clash-tun/3_huc4b67683e030306a45c6cb613da1f9f2_18412_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;删除已有内容，替换为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt; mixin:
  dns:
    enable: true
    enhanced-mode: redir-host
    ipv6: false
    nameserver:
      - 119.29.29.29
      - 1.2.4.8
      - 1.1.1.1
      - tls://223.5.5.5:853
      - tls://223.6.6.6:853
    fake-ip-range: 198.18.0.0/16
  tun:
    enable: true
    stack: gvisor
    dns-hijack:
      - 198.18.0.2:53
    macOS-auto-route: true
    macOS-auto-detect-interface: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;点击右下角保存图标。&lt;/p&gt;
&lt;h2 id=&#34;启动-tun-模式&#34;&gt;启动 TUN 模式&lt;/h2&gt;
&lt;p&gt;返回 Clash 主页，&lt;strong&gt;关闭 System Proxy 并开启 Mixin 即可&lt;/strong&gt;，此时所有流量都会通过 Clash 进行分流。默认 rule 模式下，国内所有 ip 和域名均不会走代理服务器，但请尤其注意系统更新，游戏更新等流量。&lt;/p&gt;
&lt;p&gt;正确开启的情况下，系统会多出一个名为 Clash 的网卡。&lt;/p&gt;
&lt;p&gt;如需关闭 TUN 模式，首页关闭 Mixin 并开启 System Proxy 即可。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Linux目录介绍</title>
        <link>https://catmode.github.io/p/linux-fhs/</link>
        <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/linux-fhs/</guid>
        <description>&lt;h1 id=&#34;fhs&#34;&gt;FHS&lt;/h1&gt;
&lt;p&gt;Filesystem Hierarchy Standard（文件系统层次结构标准）&lt;br&gt;
Linux发行版所遵循的文件系统结构的统一标准&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 148; 
			flex-basis: 356px&#34;
	&gt;
	&lt;a href=&#34;https://catmode.github.io/p/linux-fhs/LFH.png&#34; data-size=&#34;1194x804&#34;&gt;
		&lt;img src=&#34;https://catmode.github.io/p/linux-fhs/LFH.png&#34;
			width=&#34;1194&#34;
			height=&#34;804&#34;
			srcset=&#34;https://catmode.github.io/p/linux-fhs/LFH_hu78f62bcbe72d226b8f98c42b26eec594_481051_480x0_resize_box_3.png 480w, https://catmode.github.io/p/linux-fhs/LFH_hu78f62bcbe72d226b8f98c42b26eec594_481051_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;Linux文件系统层次结构标准图&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Linux文件系统层次结构标准图&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;弧形：&lt;/strong&gt; 目录&lt;br&gt;
&lt;strong&gt;方形：&lt;/strong&gt; 常规文件&lt;br&gt;
&lt;strong&gt;菱形：&lt;/strong&gt; 设备文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;heading&#34;&gt;&lt;code&gt;/&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;根&lt;/p&gt;
&lt;h2 id=&#34;bin&#34;&gt;&lt;code&gt;/bin&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;供所有用户使用的基本命令程序文件&lt;/p&gt;
&lt;h2 id=&#34;sbin&#34;&gt;&lt;code&gt;/sbin&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;供系统管理员使用的工具程序&lt;/p&gt;
&lt;h2 id=&#34;boot&#34;&gt;&lt;code&gt;/boot&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;引导加载器必须用到的各种静态文件（kernel，initramfs(initrd)，grub等）&lt;/p&gt;
&lt;h2 id=&#34;dev&#34;&gt;&lt;code&gt;/dev&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;存储特殊文件或设备文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设备的两种类型：&lt;strong&gt;字符设备&lt;/strong&gt;（线性设备，有时序）、&lt;strong&gt;块设备&lt;/strong&gt;（随即设备，后发先制）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符型设备：键盘，显示器&lt;/li&gt;
&lt;li&gt;块设备：硬盘，内存&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;etc&#34;&gt;&lt;code&gt;/etc&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;系统程序的静态配置文件&lt;/p&gt;
&lt;h2 id=&#34;home&#34;&gt;&lt;code&gt;/home&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;普通用户家目录的集中位置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般每个普通的家目录默认为此目录下与用户名同名的子目录：&lt;strong&gt;/home/USERNAME&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;root&#34;&gt;&lt;code&gt;/root&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;管理员的家目录&lt;/p&gt;
&lt;h2 id=&#34;lib&#34;&gt;&lt;code&gt;/lib&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;为系统启动或跟文件系统上的应用程序（/bin，/sbin等）提供共享库，以及为内核提供内核模块&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libc.so.*：
动态链接的C库&lt;/li&gt;
&lt;li&gt;ld*：
运行时链接器/加载器&lt;/li&gt;
&lt;li&gt;modules：
用于存放内核模块的目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;lib64&#34;&gt;&lt;code&gt;/lib64&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;64位系统特有的存放64位共享库的路径&lt;/p&gt;
&lt;h2 id=&#34;media&#34;&gt;&lt;code&gt;/media&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;便携式设备挂载点：cdrom，floppy等&lt;/p&gt;
&lt;h2 id=&#34;mnt&#34;&gt;&lt;code&gt;/mnt&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;其他文件系统的临时挂载点&lt;/p&gt;
&lt;h2 id=&#34;opt&#34;&gt;&lt;code&gt;/opt&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;附加第三方应用程序的安装位置&lt;/p&gt;
&lt;h2 id=&#34;srv&#34;&gt;&lt;code&gt;/srv&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;当前主机为服务提供 的数据&lt;/p&gt;
&lt;h2 id=&#34;tmp&#34;&gt;&lt;code&gt;/tmp&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;为那些会产生临时文件的程序提供的用于存储临时文件的目录，可供左右有胡执行写入操作，有特殊权限&lt;/p&gt;
&lt;h2 id=&#34;usr&#34;&gt;&lt;code&gt;/usr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;usr Hierarchy&lt;/strong&gt;&lt;br&gt;
全局共享的只读数据路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bin，sbin&lt;/li&gt;
&lt;li&gt;lib，lib64&lt;/li&gt;
&lt;li&gt;include：C程序头文件&lt;/li&gt;
&lt;li&gt;share：命令手册页和命令自带文档等架构特有的文件的存储位置&lt;/li&gt;
&lt;li&gt;local：另一个层级目录&lt;/li&gt;
&lt;li&gt;X11R6：X-Windows程序的安装位置&lt;/li&gt;
&lt;li&gt;src：程序源码文件的存储位置&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;usrlocal&#34;&gt;&lt;code&gt;/usr/local&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;local Hierarchy&lt;/strong&gt;&lt;br&gt;
让系统管理员安装本地应用程序，也通常用于安装第三方程序&lt;/p&gt;
&lt;h2 id=&#34;var&#34;&gt;&lt;code&gt;/var&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;var Hierarchy&lt;/strong&gt;&lt;br&gt;
存储常发生变化的数据的目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中包含：cache，lib，local，lock，log，opt，run，spool，tmp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;proc&#34;&gt;&lt;code&gt;/proc&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;基于内存的虚拟文件系统，用于为内核及进程存储其相关信息，多为内核参数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如：&lt;br&gt;
&lt;strong&gt;net.ipv4.ip_forward&lt;/strong&gt;&lt;br&gt;
虚拟为 net/ipv4/ip_forward，存储于 /proc/sysy/&lt;br&gt;
因此其完整路径为 &lt;strong&gt;/proc/sysy/net/ipv4/ip_forward&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;sys&#34;&gt;&lt;code&gt;/sys&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;sysfs&lt;/strong&gt;&lt;br&gt;
虚拟文件系统提供了一种比proc更为理想的访问内核数据的途径&lt;br&gt;
其主要作用在于为管理Linux设备提供一种统一模型的接口&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Linux网络及代理设置</title>
        <link>https://catmode.github.io/p/linux-network/</link>
        <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/linux-network/</guid>
        <description>&lt;h1 id=&#34;网络设置&#34;&gt;网络设置&lt;/h1&gt;
&lt;h2 id=&#34;直连&#34;&gt;直连&lt;/h2&gt;
&lt;h3 id=&#34;配置网卡&#34;&gt;配置网卡&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BOOTPROTO=dhcp &lt;br&gt;
ONBOOT=yes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新增：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IPADDR=IP地址&lt;br&gt;
NETMASK=子网掩码&lt;br&gt;
GATWAY=网关&lt;br&gt;
DNS1=DNS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;配置网络&#34;&gt;配置网络&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/sysconfig/network
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新增：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NETWORKING=yes&lt;br&gt;
HOSTNAME=默认为localhost.localdomain&lt;br&gt;
GATWAY=网关&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;重启网络&#34;&gt;重启网络&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;service network restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;查看配置&#34;&gt;查看配置&lt;/h3&gt;
&lt;p&gt;使用ifconfig查看网卡信息&lt;br&gt;
如果提示找不到该命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo $PATH					#查看当前环境变量
ls /sbin|grep ifconfig				#根据环境变量查看指令
yum search ifconfig				#搜索ifconfig包
yum install net-tools.x86_64			#安装搜索到的对应包
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;代理&#34;&gt;代理&lt;/h2&gt;
&lt;p&gt;配置网络与开启Clash代理
相关配置Clash的教程见&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/clash/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置网卡-1&#34;&gt;配置网卡&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/profile					#全局设置

vi ~/.bashrc					#仅设置当前账户
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新增：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;# add proxy for network&lt;/strong&gt;&lt;br&gt;
export http_proxy=127.0.0.1:7890&lt;br&gt;
export https_proxy=127.0.0.1:7890&lt;br&gt;
export ftp_proxy=127.0.0.1:7890&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或只新增：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;export ALL_PROXY=socks5://127.0.0.1:7890&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;保存：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source /ertc/profile				#全局生效

source ~/.bashrc				#当前账户生效
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;安装proxychains4&#34;&gt;安装proxychains4&lt;/h1&gt;
&lt;h2 id=&#34;配置git&#34;&gt;配置git&lt;/h2&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果git太慢，则需要给git挂代理&lt;/p&gt;
&lt;h3 id=&#34;直连-1&#34;&gt;直连&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法一：&lt;/strong&gt; 使用nslookup查找github对应ip及域名后修改host&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装nslookup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用yum查找并安装对应安装包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum provides */nslookup				#下载nslookup，查询软件包
yum install -y bind-utils			#安装查找到的bind-utils包
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;使用nslookup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查找github域名及对应ip地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nslookup github.global.ssl.fastly.Net  

nslookup github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;修改hosts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编辑hosts，添加查找到的github域名及ip地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;github.com IP&lt;br&gt;
github.global.ssl.fastly.Net IP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;代理-1&#34;&gt;代理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;方法二：&lt;/strong&gt; 直接给git设置代理，需要局域网内clash主机开启流量转发&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global http.proxy ip:port		#设置代理

git config --global --unset http.proxy		#取消代理
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置proxychains4&#34;&gt;配置proxychains4&lt;/h2&gt;
&lt;h3 id=&#34;安装-1&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;安装proxychains4&lt;/p&gt;
&lt;p&gt;使用git克隆：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/rofl0r/proxychains-ng.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果之前使用过这条命令，且提示未找到proxychains-ng包
删除刚刚下载的proxychains-ng包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rm -rf proxychains-ng
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译及安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd proxychains-ng
sudo ./configure &amp;amp;&amp;amp; sudo make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果提示编译异常，需要安装gcc：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install gcc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再次执行编译及安装&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;p&gt;安装配置文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install-config
sudo ln -s /usr/local/bin/proxychains4 /usr/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改配置文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /usr/local/etc/proxychains.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在注释最后添加：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;socks4 127.0.0.1 9050&lt;br&gt;
socks5 ip:port&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;可能需要将它拷贝到&lt;code&gt;/etc/proxychains.conf&lt;/code&gt;路径下才能生效，默认为该目录或使用正常忽略即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Clash for Linux</title>
        <link>https://catmode.github.io/p/clash/</link>
        <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/clash/</guid>
        <description>&lt;img src="https://catmode.github.io/p/clash/logo.png" alt="Featured image of post Clash for Linux" /&gt;&lt;h1 id=&#34;局域网代理流量转发设置&#34;&gt;局域网代理流量转发&amp;amp;设置&lt;/h1&gt;
&lt;p&gt;这里介绍的代理软件为&lt;strong&gt;Clash&lt;/strong&gt;，本篇教程基于 &lt;strong&gt;Debian 11，CentOS&lt;/strong&gt; 系基本大同小异可以作为参考&lt;br&gt;
教程适用于只有终端（SSH）的机器，如装有 GUI 图形界面，可以直接使用 Clash for Windows 的 Linux 版&lt;/p&gt;
&lt;h2 id=&#34;选择版本&#34;&gt;选择版本&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dreamacro/clash/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Dreamacro/clash/releases&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/Dreamacro/clash/releases/download/v1.6.5/clash-linux-amd64-v1.6.5.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 版本号可能会变化，请勿照抄命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果提示以下信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Unable to establish SSL connection  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;则需要给wget挂代理，编辑配置文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/wgetrc  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http_proxy = http://adress:port/
https_proxy = http://adress:port/
ftp_proxy = http://adress:port/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;若无法连接提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;failed：Connection refused
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;则设置局域网中可使用Clash代理的主机进行局域网流量转发：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;设置完成订阅链接及代理后（流量转发主机的代理能正常使用的情况下）进行下列步骤：&lt;/li&gt;
&lt;li&gt;开启General - Allow LAN、System Proxy&lt;/li&gt;
&lt;li&gt;默认端口7890，代理填写格式为流量转发的主机IP:7890，例：192.168.0.100:7890&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;解压&#34;&gt;解压&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;gunzip clash-linux-amd64-v1.6.5.gz

chmod +x clash-linux-amd64-v1.6.5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;将clash订阅链接在&lt;a class=&#34;link&#34; href=&#34;https://sub.ftt.me/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个网站&lt;/a&gt;转换后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -O config.yaml &amp;quot;转换后的订阅链接&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;修改&#34;&gt;修改&lt;/h2&gt;
&lt;p&gt;由于默认订阅配置没有设置密码，安全起见使用 nano / vim 等编辑器打开配置文件添加一行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;secret: &amp;quot;password&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;将 password 替换为你想要设置的密码&lt;/li&gt;
&lt;li&gt;将原有的 allow-lan: true 改为 allow-lan: false ，保存文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;运行&#34;&gt;运行&lt;/h2&gt;
&lt;p&gt;使用以下命令让 clash core 保持后台运行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt update

apt install screen

screen -S clash

./clash -f config.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如一切正常会看到以下回显，按住 Ctrl 依次再按一下 A D 将 clash core 切换到后台&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;INFO[0000] Start initial compatible provider * ****&lt;br&gt;
&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;设置&#34;&gt;设置&lt;/h2&gt;
&lt;p&gt;使用 nano / vim 等编辑器打开 &lt;code&gt;~/.bashrc&lt;/code&gt; ，在末尾添加一行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export ALL_PROXY=&amp;quot;socks5://127.0.0.1:7891&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存文件，打开&lt;a class=&#34;link&#34; href=&#34;http://clash.razord.top/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个网址&lt;/a&gt;
其中 Host 为 Linux 主机的 IP 地址，端口为 9090 ，密钥为第五步中设置的密码。填写妥当后点击确定。
在“代理”页面的“节点选择”和“漏网之鱼”分组选择任意服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 切换立即生效，无需保存。关闭网页不影响代理运行。
退出当前终端（SSH），重新连接即可生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;p&gt;可以使用以下命令测试代理生效情况：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -I https://google.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;请注意 Ping 命令使用 ICMP 协议，默认不走代理&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>ToDesk for Linux</title>
        <link>https://catmode.github.io/p/todesk/</link>
        <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/todesk/</guid>
        <description>&lt;img src="https://catmode.github.io/p/todesk/logo.png" alt="Featured image of post ToDesk for Linux" /&gt;&lt;h1 id=&#34;todesk-for-linux&#34;&gt;ToDesk for Linux&lt;/h1&gt;
&lt;h2 id=&#34;版本&#34;&gt;版本&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fedora/CentOS/RedHat&lt;/strong&gt;&lt;br&gt;
其他版本以&lt;a class=&#34;link&#34; href=&#34;https://www.todesk.com/download_detail.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方网站&lt;/a&gt;为准&lt;/p&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载&lt;/h2&gt;
&lt;p&gt;最新版本详见官网&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://dl.todesk.com/linux/todesk_3.2.2_x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm -Uvh todesk_3.2.2_x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动&#34;&gt;启动&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;todesk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如不能正常使用，则执行以下命令初始化：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl stop todeskd.service  

sudo mv /opt/todesk/config/todeskd.conf /opt/todesk/config/todeskd.conf.bak  

sudo systemctl start todeskd.service  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;排查错误可执行以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tail -f /var/log/todesk/todeskd.log			#查看服务日志

tail -f ~/.local/share/todesk/log/todesk.log		#查看客户端日志

rm ~/.config/todesk/todesk.cfg				#删除客户端配置

rm /opt/todesk/config/todeskd.conf			#删除服务设置配置
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>HUGO食用指南 - 媒体篇</title>
        <link>https://catmode.github.io/p/hugo-music/</link>
        <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/hugo-music/</guid>
        <description>&lt;img src="https://catmode.github.io/p/hugo-music/NetEase.png" alt="Featured image of post HUGO食用指南 - 媒体篇" /&gt;&lt;h1 id=&#34;添加hugo站点音乐&#34;&gt;添加HUGO站点音乐&lt;/h1&gt;
&lt;p&gt;stack主题自带视频模板，支持bilibili、tencent、youtube及本地视频，本篇主要介绍如何添加音乐模板&lt;/p&gt;
&lt;p&gt;存放 &lt;strong&gt;自定义模板.html&lt;/strong&gt; 的目录有以下两处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个为根目录下：&lt;code&gt;\layouts\shortcodes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个为主题目录下：&lt;code&gt;\themes\hugo-theme-stack\layouts\shortcodes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个路径添加其中之一即可&lt;/p&gt;
&lt;h2 id=&#34;本地音乐&#34;&gt;本地音乐&lt;/h2&gt;
&lt;h3 id=&#34;添加模板&#34;&gt;添加模板&lt;/h3&gt;
&lt;p&gt;添加&lt;strong&gt;本地音乐.html&lt;/strong&gt;模板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{.Get 0}}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;audio&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;controls&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;autoplay&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;loop&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;preload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{.Get 0}}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Your browser does not support the &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;audio&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; element.&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;audio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Get 0&lt;/code&gt;：关闭自动播放&lt;br&gt;
&lt;code&gt;Get 1&lt;/code&gt;：开启自动播放&lt;/p&gt;
&lt;h3 id=&#34;用法&#34;&gt;用法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在md中插入：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;{ {&amp;lt; music &amp;ldquo;music.mp3&amp;rdquo; &amp;ldquo;music&amp;rdquo; &amp;gt;} }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 中括号&lt;code&gt;{{&lt;/code&gt;、&lt;code&gt;}}&lt;/code&gt;内无空格&lt;/p&gt;
&lt;p&gt;第一个参数表示歌曲的位置，第二个参数表示歌名&lt;br&gt;
本地音乐存放至对应md目录下&lt;/p&gt;
&lt;h3 id=&#34;效果&#34;&gt;效果&lt;/h3&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;audio controls autoplay loop  preload=&#34;none&#34; src=&#34;&#34;&gt;
    &lt;p&gt;Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.&lt;/p&gt;
&lt;/audio&gt;
&lt;hr&gt;
&lt;h2 id=&#34;网易云音乐&#34;&gt;网易云音乐&lt;/h2&gt;
&lt;p&gt;原生的hugo不支持iframe标签嵌入，所以无法支持网易云音乐的外链播放，但可以用自定义的方式添加自己的&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/templates/shortcode-templates/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shortcode-templates&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;添加模板-1&#34;&gt;添加模板&lt;/h3&gt;
&lt;p&gt;添加&lt;strong&gt;网易云音乐.html&lt;/strong&gt;模板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ with .Get &amp;#34;id&amp;#34; }}
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iframe&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;frameborder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;marginwidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;marginheight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;60%&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;86&lt;/span&gt;
        &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id={{ . }}&amp;amp;auto=1&amp;amp;height=66&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iframe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;用法-1&#34;&gt;用法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在md中插入：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;{ {&amp;lt; neteasemusic id=&amp;ldquo;1234567890&amp;rdquo;&amp;gt;} }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 中括号&lt;code&gt;{{&lt;/code&gt;、&lt;code&gt;}}&lt;/code&gt;内无空格&lt;/p&gt;
&lt;h3 id=&#34;效果-1&#34;&gt;效果&lt;/h3&gt;

    &lt;iframe
        frameborder=&#34;no&#34;
        border=&#34;0&#34;
        marginwidth=&#34;0&#34;
        marginheight=&#34;0&#34;
        width=60%
        height=86
        src=&#34;//music.163.com/outchain/player?type=2&amp;id=1818031620&amp;auto=1&amp;height=66&#34;&gt;
    &lt;/iframe&gt;

&lt;h1 id=&#34;注意音量&#34;&gt;注意音量！&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;HUGO食用指南&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基础搭建及部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-music/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加音乐模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-comments/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加评论模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>HUGO食用指南</title>
        <link>https://catmode.github.io/p/hugo/</link>
        <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://catmode.github.io/p/hugo/</guid>
        <description>&lt;img src="https://catmode.github.io/p/hugo/2560px-Logo_of_Hugo_the_static_website_generator.svg.png" alt="Featured image of post HUGO食用指南" /&gt;&lt;h1 id=&#34;搭建基于hugo的github站点&#34;&gt;搭建基于Hugo的GitHub站点&lt;/h1&gt;
&lt;h2 id=&#34;hugo简介&#34;&gt;Hugo简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Hugo，世界上最快的网站建设框架。”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hugo以Go编写，是根据Apache许可证2.0提供的开源静态站点生成器。&lt;/li&gt;
&lt;li&gt;Hugo支持TOML、YAML和JSON数据文件类型、Markdown和HTML内容文件，并使用短代码添加丰富的内容。其他值得注意的功能包括分类学、多语言模式、图像处理、自定义输出格式、HTML/CSS/JS缩小以及对Sass SCSS工作流程的支持。&lt;/li&gt;
&lt;li&gt;Hugo利用各种开源项目，非常适合博客、公司网站、创意作品集、在线杂志、单页应用程序，甚至数千页的网站，适用于那些想自己网站编写代码而不必担心设置复杂的运行时、依赖项和数据库的人。&lt;/li&gt;
&lt;li&gt;使用Hugo构建的网站速度极快、安全，可以部署在任何地方，包括AWS、GitHub Pages、Heroku、Netlify和任何其他托管提供商。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h2&gt;
&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;
&lt;h4 id=&#34;centos&#34;&gt;CentOS&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/gohugoio/hugo/releases/download/v0.41/hugo_0.41_Linux-64bit.tar.gz

tar -zxvf ./hugo_0.41_Linux-64bit.tar.gz

cp ./hugo /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;macos&#34;&gt;MacOS&lt;/h3&gt;
&lt;h4 id=&#34;brew安装&#34;&gt;brew安装&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/installing/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo官方文档&lt;/a&gt;中给出了&lt;code&gt;choco&lt;/code&gt;和&lt;code&gt;scoop&lt;/code&gt;两种安装方式&lt;/p&gt;
&lt;h4 id=&#34;choco安装&#34;&gt;choco安装&lt;/h4&gt;
&lt;p&gt;1.使用&lt;code&gt;powershell&lt;/code&gt;安装Chocolatey：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://chocolatey.org/install.ps1&amp;#39;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2.查看choco版本验证安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;choco version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.使用choco安装hugo或hugo-extended：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;choco install hugo -confirm  

choco install hugo-extended -confirm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4.如果安装hugo过程中速度过慢可配置choco代理：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;choco config set proxy http://localhost:port
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;scoop安装&#34;&gt;scoop安装&lt;/h4&gt;
&lt;p&gt;1.使用&lt;code&gt;powershell&lt;/code&gt;安装scoop：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;    iex (new-object net.webclient).downloadstring(&amp;#39;https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2.使用scoop安装hugo或hugo-extended：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scoop install hugo  

scoop install hugo-extended
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;部署hugo&#34;&gt;部署Hugo&lt;/h2&gt;
&lt;p&gt;以&lt;strong&gt;GitHub Page&lt;/strong&gt;为例：&lt;/p&gt;
&lt;h3 id=&#34;新建库&#34;&gt;新建库&lt;/h3&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://github.com/new&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;内创建&lt;code&gt;Repository&lt;/code&gt;，命名为&lt;code&gt;username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/new&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装git&#34;&gt;安装Git&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git官方网站&lt;/a&gt;下载运行安装&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置git&#34;&gt;配置Git&lt;/h3&gt;
&lt;p&gt;1.设置&lt;strong&gt;user.name&lt;/strong&gt;和&lt;strong&gt;user.email&lt;/strong&gt;配置信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name [GitHub user.name]  

git config --global user.email [GitHub user.email]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.生成ssh密钥文件，默认不需要设置密码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C [GitHub user.email]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.找到生成的&lt;code&gt;.ssh&lt;/code&gt;目录中的&lt;code&gt;id_rsa.pub&lt;/code&gt;密钥，复制内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows路径&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;C:\Users\user.ssh\id_rsa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Linux路径&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/user/.ssh/id_rsa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4.打开 &lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/keys&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/settings/keys&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;新建&lt;code&gt;new SSH Key&lt;/code&gt;，粘贴复制的&lt;code&gt;id_rsa.pub&lt;/code&gt;密钥，点击&lt;code&gt;Add SSH key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.检测GitHub公钥设置是否成功：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;X.配置git代理&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global http.proxy http://localhost:port	#设置git代理

git config --global --unset http.proxy			#取消git代理
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;~/.gitconfig&lt;/code&gt;查看git代理设置&lt;/p&gt;
&lt;h3 id=&#34;新建站点&#34;&gt;新建站点&lt;/h3&gt;
&lt;p&gt;在需要存放站点的目录下执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new site website
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置主题&#34;&gt;设置主题&lt;/h3&gt;
&lt;p&gt;1.在站点根目录克隆主题到&lt;strong&gt;站点根目录&lt;/strong&gt;下的&lt;strong&gt;themes&lt;/strong&gt;文件夹：（以当前stack主题为例，其他详见&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/themes/hugo-theme-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo官方主题页面&lt;/a&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;具体站点配置以主题说明文档为准，这里使用的&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/zh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stack主题文档&lt;/a&gt;说明需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除&lt;strong&gt;站点根目录&lt;/strong&gt;下的&lt;code&gt;config.toml&lt;/code&gt;默认配置&lt;/li&gt;
&lt;li&gt;将该&lt;strong&gt;主题目录&lt;/strong&gt;内的&lt;code&gt;exampleSite&lt;/code&gt;文件夹里所有文件复制到&lt;strong&gt;站点根目录&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.运行本地服务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里报错无法启动服务，将提示错误的&lt;code&gt;站点根目录\content\post\rich-content\index.md&lt;/code&gt;文件删除即可&lt;/p&gt;
&lt;p&gt;3.输入默认本地网址访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;localhost:1313
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;编辑路径&#34;&gt;编辑路径&lt;/h3&gt;
&lt;p&gt;以当前&lt;code&gt;stack&lt;/code&gt;主题为例，站点的各个常用编辑路径如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\站点根目录\config.yaml					#主站配置
	|
	|————\static\					#图片目录
	|
	|————\assets\img\				#头像目录
	|
	|————\content\page\		
	|	|	|——about.md			#关于页面
	|	|	|——archives.md			#归档页面
	|	|	|——search.md			#搜索页面
	|	|
	|	|——\post\				#文档目录
	|	|
	|	|——\categories\				#标签目录
	|
	|————\themes\					#主题目录
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;推送站点到github&#34;&gt;推送站点到GitHub&lt;/h2&gt;
&lt;h3 id=&#34;首次部署推送&#34;&gt;首次部署推送&lt;/h3&gt;
&lt;p&gt;1.在站点根目录执行&lt;code&gt;hugo&lt;/code&gt;命令生成最终页面：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo								
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成的文件默认存放在站点根目录下&lt;code&gt;public&lt;/code&gt;目录中。如果未生成任何文章，去掉文章头部的 draft=true 再重新生成&lt;/p&gt;
&lt;p&gt;2.在生成的&lt;code&gt;public&lt;/code&gt;目录下执行下列操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init

git remote add origin &amp;quot;https://github.com/user/user.github.io&amp;quot;

git add -A		
				
git commit -m &amp;quot;first commit&amp;quot;

git push -m origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.至此你的站点就被推送到GitHub上了，输入你的GitHub站点网址查看：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;https://&lt;code&gt;user&lt;/code&gt;.github.io&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;后期修改推送&#34;&gt;后期修改推送&lt;/h3&gt;
&lt;p&gt;1.将第一次生成后的&lt;code&gt;public&lt;/code&gt;目录删除，并重新生成推送：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo

cd public

git init

git remote add origin &amp;quot;https://github.com/user/user.github.io&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.此时可根据需要进行的操作选择对应指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add -A					#提交所有改动

git add -u 					#提交修改的和被删除的文件，不包括新文件	

git add . 					#提交新文件和被修改的文件，不包括被删除文件
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.完成后执行下列操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit -m &amp;quot;update message&amp;quot;

git push -f origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4.输入GitHub站点网址查看：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;https://&lt;code&gt;user&lt;/code&gt;.github.io&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;注意备份站点&#34;&gt;注意备份站点！&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;HUGO食用指南&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基础搭建及部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-music/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加音乐模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://catmode.github.io/p/hugo-comments/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;添加评论模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
